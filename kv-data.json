[
{"key": "_worker.js", "value": "ZXhwb3J0IGRlZmF1bHQgewogICAgYXN5bmMgZmV0Y2gocmVxdWVzdCwgZW52LCBjdHgpIHsKICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTsKICAgICAgICBjb25zdCBwYXRoID0gdXJsLnBhdGhuYW1lOwoKICAgICAgICAvLyBPbmx5IGhhbmRsZSBBUEkgcm91dGVzCiAgICAgICAgaWYgKHBhdGguc3RhcnRzV2l0aCgnL2FwaS8nKSkgewogICAgICAgICAgICBpZiAocGF0aCA9PT0gJy9hcGkvbG9nLWVudHJ5JyAmJiByZXF1ZXN0Lm1ldGhvZCA9PT0gJ1BPU1QnKSB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0bXQgPSBhd2FpdCBlbnYuREIucHJlcGFyZSgKICAgICAgICAgICAgICAgICAgICAgICAgJ0lOU0VSVCBJTlRPIGVudHJpZXMgKGVudHJ5X3R5cGUsIHByaWNlKSBWQUxVRVMgKD8sID8pJwogICAgICAgICAgICAgICAgICAgICkuYmluZChkYXRhLmVudHJ5X3R5cGUsIGRhdGEucHJpY2UpOwogICAgICAgICAgICAgICAgICAgIGF3YWl0IHN0bXQucnVuKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IHN1Y2Nlc3M6IHRydWUgfSksIHsKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6ICdGYWlsZWQgdG8gbG9nIGVudHJ5JyB9KSwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDUwMCwKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAocGF0aCA9PT0gJy9hcGkvc3VtbWFyeScgJiYgcmVxdWVzdC5tZXRob2QgPT09ICdHRVQnKSB7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0bXQgPSBhd2FpdCBlbnYuREIucHJlcGFyZSgKICAgICAgICAgICAgICAgICAgICAgICAgJ1NFTEVDVCBlbnRyeV90eXBlLCBDT1VOVCgqKSBhcyBjb3VudCwgU1VNKHByaWNlKSBhcyB0b3RhbF92YWx1ZSwgQVZHKHByaWNlKSBhcyBhdmVyYWdlX3ByaWNlIEZST00gZW50cmllcyBHUk9VUCBCWSBlbnRyeV90eXBlJwogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IHN0bXQuYWxsKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShyZXN1bHRzKSwgewogICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBzdW1tYXJ5JyB9KSwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDUwMCwKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKCdOb3QgRm91bmQnLCB7IHN0YXR1czogNDA0IH0pOwogICAgICAgIH0KCiAgICAgICAgLy8gTGV0IFBhZ2VzIGhhbmRsZSBhbGwgb3RoZXIgcm91dGVzIChzdGF0aWMgZmlsZXMpCiAgICAgICAgcmV0dXJuIGVudi5BU1NFVFMuZmV0Y2gocmVxdWVzdCk7CiAgICB9Cn07Cg==", "base64": true}
,
{"key": "dashboard.html", "value": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+RW50cnkgRGFzaGJvYXJkPC90aXRsZT4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwogICAgICAgICAgICBtYXgtd2lkdGg6IDgwMHB4OwogICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsKICAgICAgICAgICAgcGFkZGluZzogMjBweDsKICAgICAgICB9CiAgICAgICAgLm5hdiB7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgICAgICAgfQogICAgICAgIC5zdW1tYXJ5IHsKICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDsKICAgICAgICB9CiAgICAgICAgdGFibGUgewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDsKICAgICAgICB9CiAgICAgICAgdGgsIHRkIHsKICAgICAgICAgICAgcGFkZGluZzogMTJweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7CiAgICAgICAgfQogICAgICAgIHRoIHsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsKICAgICAgICB9CiAgICAgICAgdHI6aG92ZXIgewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJuYXYiPgogICAgICAgIDxhIGhyZWY9Ii9pbmRleC5odG1sIj5CYWNrIHRvIEVudHJ5IEZvcm08L2E+CiAgICA8L2Rpdj4KICAgIDxoMT5FbnRyeSBEYXNoYm9hcmQ8L2gxPgogICAgPGRpdiBjbGFzcz0ic3VtbWFyeSI+CiAgICAgICAgPGgyPlN1bW1hcnk8L2gyPgogICAgICAgIDx0YWJsZSBpZD0ic3VtbWFyeVRhYmxlIj4KICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aD5FbnRyeSBUeXBlPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+Q291bnQ8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD5Ub3RhbCBWYWx1ZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPkF2ZXJhZ2UgUHJpY2U8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90aGVhZD4KICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgPCEtLSBEYXRhIHdpbGwgYmUgcG9wdWxhdGVkIGhlcmUgLS0+CiAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgPC90YWJsZT4KICAgIDwvZGl2PgoKICAgIDxzY3JpcHQ+CiAgICAgICAgYXN5bmMgZnVuY3Rpb24gbG9hZFN1bW1hcnkoKSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3N1bW1hcnknKTsKICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIHN1bW1hcnknKTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgICAgICAgICAgIGlmICghZGF0YS5yZXN1bHRzKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcmVzcG9uc2UgZm9ybWF0Jyk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGNvbnN0IHRib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3N1bW1hcnlUYWJsZSB0Ym9keScpOwogICAgICAgICAgICAgICAgdGJvZHkuaW5uZXJIVE1MID0gJyc7IC8vIENsZWFyIGV4aXN0aW5nIHJvd3MKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZGF0YS5yZXN1bHRzLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3Qgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTsKICAgICAgICAgICAgICAgICAgICByb3cuaW5uZXJIVE1MID0gYAogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtpdGVtLmVudHJ5X3R5cGV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiR7aXRlbS5jb3VudH08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JCR7KGl0ZW0udG90YWxfdmFsdWUgfHwgMCkudG9GaXhlZCgyKX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JCR7KGl0ZW0uYXZlcmFnZV9wcmljZSB8fCAwKS50b0ZpeGVkKDIpfTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgYDsKICAgICAgICAgICAgICAgICAgICB0Ym9keS5hcHBlbmRDaGlsZChyb3cpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcik7CiAgICAgICAgICAgICAgICBhbGVydCgnRmFpbGVkIHRvIGxvYWQgc3VtbWFyeS4gUGxlYXNlIHRyeSBhZ2Fpbi4nKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gTG9hZCBzdW1tYXJ5IHdoZW4gcGFnZSBsb2FkcwogICAgICAgIGxvYWRTdW1tYXJ5KCk7CgogICAgICAgIC8vIFJlZnJlc2ggc3VtbWFyeSBldmVyeSAzMCBzZWNvbmRzCiAgICAgICAgc2V0SW50ZXJ2YWwobG9hZFN1bW1hcnksIDMwMDAwKTsKICAgIDwvc2NyaXB0Pgo8L2JvZHk+CjwvaHRtbD4K", "base64": true}
,
{"key": "index.html", "value": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+RW50cnkgTG9nZ2VyPC90aXRsZT4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwogICAgICAgICAgICBtYXgtd2lkdGg6IDgwMHB4OwogICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsKICAgICAgICAgICAgcGFkZGluZzogMjBweDsKICAgICAgICB9CiAgICAgICAgZm9ybSB7CiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgICAgICAgIGdhcDogMTBweDsKICAgICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDsKICAgICAgICB9CiAgICAgICAgaW5wdXQsIHNlbGVjdCwgYnV0dG9uIHsKICAgICAgICAgICAgcGFkZGluZzogOHB4OwogICAgICAgICAgICBmb250LXNpemU6IDE2cHg7CiAgICAgICAgfQogICAgICAgIGJ1dHRvbiB7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7CiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICAgICAgYm9yZGVyOiBub25lOwogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgfQogICAgICAgIGJ1dHRvbjpob3ZlciB7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7CiAgICAgICAgfQogICAgICAgIC5uYXYgewogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJuYXYiPgogICAgICAgIDxhIGhyZWY9Ii9kYXNoYm9hcmQuaHRtbCI+VmlldyBEYXNoYm9hcmQ8L2E+CiAgICA8L2Rpdj4KICAgIDxoMT5FbnRyeSBMb2dnZXI8L2gxPgogICAgPGZvcm0gaWQ9ImVudHJ5Rm9ybSI+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGxhYmVsIGZvcj0iZW50cnlfdHlwZSI+RW50cnkgVHlwZTo8L2xhYmVsPgogICAgICAgICAgICA8c2VsZWN0IGlkPSJlbnRyeV90eXBlIiBuYW1lPSJlbnRyeV90eXBlIiByZXF1aXJlZD4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlRpY2tldCBBcnRpc3QiPlRpY2tldCBBcnRpc3Q8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlRpY2tldCBGcmVlIj5UaWNrZXQgRnJlZTwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iVGlja2V0IDUwIj5UaWNrZXQgNTA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlRpY2tldCAxMDAiPlRpY2tldCAxMDA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlRpY2tldCAxNTAiPlRpY2tldCAxNTA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlRpY2tldCAyMDAiPlRpY2tldCAyMDA8L29wdGlvbj4KICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGxhYmVsIGZvcj0icHJpY2UiPlByaWNlOjwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJwcmljZSIgbmFtZT0icHJpY2UiIHN0ZXA9IjAuMDEiIHJlcXVpcmVkPgogICAgICAgIDwvZGl2PgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0Ij5TdWJtaXQgRW50cnk8L2J1dHRvbj4KICAgIDwvZm9ybT4KCiAgICA8c2NyaXB0PgogICAgICAgIC8vIEZ1bmN0aW9uIHRvIHVwZGF0ZSBwcmljZSBiYXNlZCBvbiBzZWxlY3RlZCB0aWNrZXQgdHlwZQogICAgICAgIGZ1bmN0aW9uIHVwZGF0ZVByaWNlKCkgewogICAgICAgICAgICBjb25zdCBlbnRyeVR5cGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW50cnlfdHlwZScpLnZhbHVlOwogICAgICAgICAgICBjb25zdCBwcmljZUZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ByaWNlJyk7CiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBTZXQgcHJpY2UgYmFzZWQgb24gdGlja2V0IHR5cGUKICAgICAgICAgICAgc3dpdGNoKGVudHJ5VHlwZSkgewogICAgICAgICAgICAgICAgY2FzZSAnVGlja2V0IEFydGlzdCc6CiAgICAgICAgICAgICAgICBjYXNlICdUaWNrZXQgRnJlZSc6CiAgICAgICAgICAgICAgICAgICAgcHJpY2VGaWVsZC52YWx1ZSA9ICcwJzsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgJ1RpY2tldCA1MCc6CiAgICAgICAgICAgICAgICAgICAgcHJpY2VGaWVsZC52YWx1ZSA9ICc1MCc7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlICdUaWNrZXQgMTAwJzoKICAgICAgICAgICAgICAgICAgICBwcmljZUZpZWxkLnZhbHVlID0gJzEwMCc7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlICdUaWNrZXQgMTUwJzoKICAgICAgICAgICAgICAgICAgICBwcmljZUZpZWxkLnZhbHVlID0gJzE1MCc7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlICdUaWNrZXQgMjAwJzoKICAgICAgICAgICAgICAgICAgICBwcmljZUZpZWxkLnZhbHVlID0gJzIwMCc7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgICAgIHByaWNlRmllbGQudmFsdWUgPSAnJzsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAKICAgICAgICAvLyBVcGRhdGUgcHJpY2Ugd2hlbiB0aWNrZXQgdHlwZSBjaGFuZ2VzCiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VudHJ5X3R5cGUnKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB1cGRhdGVQcmljZSk7CiAgICAgICAgCiAgICAgICAgLy8gVXBkYXRlIHByaWNlIG9uIHBhZ2UgbG9hZAogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCB1cGRhdGVQcmljZSk7CiAgICAgICAgCiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VudHJ5Rm9ybScpLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGFzeW5jIChlKSA9PiB7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gewogICAgICAgICAgICAgICAgZW50cnlfdHlwZTogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VudHJ5X3R5cGUnKS52YWx1ZSwKICAgICAgICAgICAgICAgIHByaWNlOiBwYXJzZUZsb2F0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmljZScpLnZhbHVlKQogICAgICAgICAgICB9OwoKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvbG9nLWVudHJ5JywgewogICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGZvcm1EYXRhKQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ0VudHJ5IGxvZ2dlZCBzdWNjZXNzZnVsbHkhJyk7CiAgICAgICAgICAgICAgICAgICAgZS50YXJnZXQucmVzZXQoKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gbG9nIGVudHJ5Jyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcik7CiAgICAgICAgICAgICAgICBhbGVydCgnRmFpbGVkIHRvIGxvZyBlbnRyeS4gUGxlYXNlIHRyeSBhZ2Fpbi4nKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgPC9zY3JpcHQ+CjwvYm9keT4KPC9odG1sPgo=", "base64": true}
,
{"key": "styles.css", "value": "Ym9keSB7CiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7CiAgICBtYXgtd2lkdGg6IDgwMHB4OwogICAgbWFyZ2luOiAwIGF1dG87CiAgICBwYWRkaW5nOiAyMHB4OwogICAgbGluZS1oZWlnaHQ6IDEuNjsKfQoKaDEgewogICAgY29sb3I6ICMzMzM7CiAgICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Cgpmb3JtIHsKICAgIGJhY2tncm91bmQ6ICNmOWY5Zjk7CiAgICBwYWRkaW5nOiAyMHB4OwogICAgYm9yZGVyLXJhZGl1czogOHB4OwogICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4xKTsKfQoKbGFiZWwgewogICAgZGlzcGxheTogYmxvY2s7CiAgICBtYXJnaW4tYm90dG9tOiA4cHg7CiAgICBjb2xvcjogIzU1NTsKfQoKaW5wdXQsIHNlbGVjdCB7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDhweDsKICAgIG1hcmdpbi1ib3R0b206IDE2cHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogICAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgpidXR0b24gewogICAgYmFja2dyb3VuZDogIzAwN2JmZjsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIHBhZGRpbmc6IDEwcHggMjBweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQ6ICMwMDU2YjM7Cn0KCi5lcnJvciB7CiAgICBjb2xvcjogI2RjMzU0NTsKICAgIG1hcmdpbi10b3A6IDEwcHg7Cn0KCi5zdWNjZXNzIHsKICAgIGNvbG9yOiAjMjhhNzQ1OwogICAgbWFyZ2luLXRvcDogMTBweDsKfQo=", "base64": true}
]
